
services:
  backend:
    build: .
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - ecommerce_network
    restart: unless-stopped

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - ecommerce-mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: [ 
      "mongod", 
      "--replSet", "rs0", 
      "--bind_ip_all"
    ]
    networks:
      - ecommerce_network
    restart: unless-stopped

  mongo-setup:
    image: mongo:6
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint: [
      "bash", "-c",
      "until mongosh --host mongo --eval 'rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"mongo:27017\"}]})'; do sleep 5; done"
    ]
    networks:
      - ecommerce_network
    restart: "no"  # Ensures mongo-setup does not restart

volumes:
  ecommerce-mongo-data:
    external: true

networks:
  ecommerce_network:
    driver: bridge
